<style>
    html,
    body,
    #viewDiv {
        height: 100%;
        width: 100%;
        margin: 0;
        padding: 0;
    }

    #info {
        padding: 14px;
        border-radius: 5px;
    }

    #update {
        padding: 6px;
    }

    #form {
        background: #fff;
    }

    /* replaces esri-widget--panel */
    .scroller {
        overflow-x: hidden;
        overflow-y: auto;
    }
</style>

<script>
    require([
    "esri/Map",
    "esri/views/MapView",
    "esri/widgets/FeatureForm",
    "esri/layers/FeatureLayer",
    "esri/widgets/Popup",
    "esri/PopupTemplate",
    "esri/widgets/FeatureForm"
  ], function(
    Map,
    MapView,
    FeatureForm,
    FeatureLayer) {

  let highlight, editFeature;
    const featureLayer = new FeatureLayer({
      portalItem: {
        id: "f1e71570150a4d0b9012a76cab894fad"
      }
    });
    featureLayer.popupTemplate = {
          title: "{DESC_}",
          content: [{
            type: "fields",
            fieldInfos: [{
              fieldName: "SEG_ID",
              label: "Segment ID"
            }, {
              fieldName: "DESC_",
              label: "Segment Zone Name"
            }, {
              fieldName: "PH"
            }, {
              fieldName: "CantitateSubstanteNocive",
              label: "Substante Nocive"
            }, {
              fieldName: "ProcentPoluare",
              label: "Procent Poluare"
            }]
          }]
    };

    const map = new Map({
      basemap: "topo",
      layers: [featureLayer]
    });

    let view = new MapView({
      map: map,
      container: "viewDiv",
      center: [22.5, 46],
      zoom: 8
    });
    form = new FeatureForm({
      container: "form",
      groupDisplay: "sequential",
      layer: featureLayer,
      // Autocastable to FieldGroupConfig
      // Inspector group
      fieldConfig: [{
        label: "Inspector information",
        description: "Field inspector information",
        // individual field configurations within the group
        fieldConfig: [{
              name: "SEG_ID",
              label: "Segment ID"
            }, {
              name: "DESC_",
              label: "Segment Zone Name"
            }, {
              name: "PH"
            }, {
              name: "CantitateSubstanteNocive",
              label: "Substante Nocive (mg/L)"
            }, {
              name: "ProcentPoluare",
              label: "Procent Poluare (%)"
            }]
        }]
       });


    view.popup.autoOpenEnabled = false;

    view.on("click", function(event) {
      // Unselect any currently selected features
      unselectFeature();
      // Listen for when the user clicks on the view
      view.hitTest(event).then(function(response) {
        // If user selects a feature, select it
        const results = response.results;
        if (results.length > 0 && results[0].graphic && results[0].graphic.layer === featureLayer) {
          selectFeature(results[0].graphic.attributes[featureLayer.objectIdField]);
        }
        else {
          // Hide the form and show the info div
          document.getElementById("update").classList.add("esri-hidden");
        }
      });
    });

    // Function to unselect features
    function unselectFeature() {
      if (highlight) {
        highlight.remove();
      }
    }

    // Highlight the clicked feature and display
    // its attributes in the featureform.
    function selectFeature(objectId) {
      // query feature from the server
      featureLayer.queryFeatures({
        objectIds: [objectId],
        outFields: ["*"],
        returnGeometry: true
      }).then(function(results) {
        if (results.features.length > 0) {
          editFeature = results.features[0];

          // display the attributes of selected feature in the form
          form.feature = editFeature;

          // highlight the feature on the view
          view.whenLayerView(editFeature.layer).then(function(layerView) {
            highlight = layerView.highlight(editFeature);
          });

          if (document.getElementById("update").classList.contains("esri-hidden")){
            document.getElementById("info").classList.add("esri-hidden");
            document.getElementById("update").classList.remove("esri-hidden");
          }
        }
      });
    }

    // Listen to the feature form's submit event.
    form.on("submit", function() {
      if (editFeature) {
        // Grab updated attributes from the form.
        const updated = form.getValues();

        // Loop through updated attributes and assign
        // the updated values to feature attributes.
        Object.keys(updated).forEach(function(name) {
          editFeature.attributes[name] = updated[name];
        });

        // Setup the applyEdits parameter with updates.
        const edits = {
          updateFeatures: [editFeature]
        };
        applyAttributeUpdates(edits);
        document.getElementById("update").classList.add("esri-hidden");
      }
    });

    // Call FeatureLayer.applyEdits() with specified params.
    function applyAttributeUpdates(params) {
      document.getElementById("btnUpdate").style.cursor = "progress";
      featureLayer.applyEdits(params).then(function(editsResult) {
          // Get the objectId of the newly added feature.
          // Call selectFeature function to highlight the new feature.
          if (editsResult.addFeatureResults.length > 0) {
            const objectId = editsResult.addFeatureResults[0].objectId;
            selectFeature(objectId);
          }
          document.getElementById("btnUpdate").style.cursor = "pointer";
        })
        .catch(function(error) {
          console.log("===============================================");
          console.error("[ applyEdits ] FAILURE: ", error.code, error.name,
            error.message);
          console.log("error = ", error);
          document.getElementById("btnUpdate").style.cursor = "pointer";
        });
    }

    document.getElementById("btnUpdate").onclick = function() {
      // Fires feature form's submit event.
      form.submit();
    }

    view.ui.add("update", "top-right");

    view.ui.add("info", {
      position: "top-left",
      index: 1
    });

  });
</script>

<div class="masthead" style="height:1500px">

    <div class="claro container" style="padding-top:220px;width:1000px;height:1000px">

        <h2 class="text-white-50 text-uppercase">Editare date de poluare</h2>

        <div id="viewDiv"></div>
        <div id="info" class="esri-widget">
        </div>

        <div id="update" class="esri-widget esri-hidden">
            <div id="form" class="scroller esri-component"></div>
            <input type="button" class="esri-button" value="Update assessment" id="btnUpdate">
        </div>
    </div>

</div>